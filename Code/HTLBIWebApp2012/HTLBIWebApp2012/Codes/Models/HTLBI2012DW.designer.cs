#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HTLBIWebApp2012.Codes.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HTLBI2012_DW")]
	public partial class HTLBI2012DWDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDimProject(DimProject instance);
    partial void UpdateDimProject(DimProject instance);
    partial void DeleteDimProject(DimProject instance);
    partial void InsertDimFirm(DimFirm instance);
    partial void UpdateDimFirm(DimFirm instance);
    partial void DeleteDimFirm(DimFirm instance);
    #endregion
		
		public HTLBI2012DWDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HTLBI2012_DWConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HTLBI2012DWDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HTLBI2012DWDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HTLBI2012DWDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HTLBI2012DWDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DimProject> DimProjects
		{
			get
			{
				return this.GetTable<DimProject>();
			}
		}
		
		public System.Data.Linq.Table<DimFirm> DimFirms
		{
			get
			{
				return this.GetTable<DimFirm>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DimProject")]
	public partial class DimProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PrjCode;
		
		private string _PrjName;
		
		private System.Nullable<char> _Locked;
		
		private System.Nullable<char> _DataSource;
		
		private System.Nullable<int> _UserSign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrjCodeChanging(string value);
    partial void OnPrjCodeChanged();
    partial void OnPrjNameChanging(string value);
    partial void OnPrjNameChanged();
    partial void OnLockedChanging(System.Nullable<char> value);
    partial void OnLockedChanged();
    partial void OnDataSourceChanging(System.Nullable<char> value);
    partial void OnDataSourceChanged();
    partial void OnUserSignChanging(System.Nullable<int> value);
    partial void OnUserSignChanged();
    #endregion
		
		public DimProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrjCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PrjCode
		{
			get
			{
				return this._PrjCode;
			}
			set
			{
				if ((this._PrjCode != value))
				{
					this.OnPrjCodeChanging(value);
					this.SendPropertyChanging();
					this._PrjCode = value;
					this.SendPropertyChanged("PrjCode");
					this.OnPrjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrjName", DbType="NVarChar(100)")]
		public string PrjName
		{
			get
			{
				return this._PrjName;
			}
			set
			{
				if ((this._PrjName != value))
				{
					this.OnPrjNameChanging(value);
					this.SendPropertyChanging();
					this._PrjName = value;
					this.SendPropertyChanged("PrjName");
					this.OnPrjNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Char(1)")]
		public System.Nullable<char> Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSource", DbType="Char(1)")]
		public System.Nullable<char> DataSource
		{
			get
			{
				return this._DataSource;
			}
			set
			{
				if ((this._DataSource != value))
				{
					this.OnDataSourceChanging(value);
					this.SendPropertyChanging();
					this._DataSource = value;
					this.SendPropertyChanged("DataSource");
					this.OnDataSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSign", DbType="Int")]
		public System.Nullable<int> UserSign
		{
			get
			{
				return this._UserSign;
			}
			set
			{
				if ((this._UserSign != value))
				{
					this.OnUserSignChanging(value);
					this.SendPropertyChanging();
					this._UserSign = value;
					this.SendPropertyChanged("UserSign");
					this.OnUserSignChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DimFirm")]
	public partial class DimFirm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FirmCode;
		
		private string _FirmName;
		
		private System.Nullable<char> _DataSource;
		
		private System.Nullable<int> _UserSign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFirmCodeChanging(int value);
    partial void OnFirmCodeChanged();
    partial void OnFirmNameChanging(string value);
    partial void OnFirmNameChanged();
    partial void OnDataSourceChanging(System.Nullable<char> value);
    partial void OnDataSourceChanged();
    partial void OnUserSignChanging(System.Nullable<int> value);
    partial void OnUserSignChanged();
    #endregion
		
		public DimFirm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FirmCode
		{
			get
			{
				return this._FirmCode;
			}
			set
			{
				if ((this._FirmCode != value))
				{
					this.OnFirmCodeChanging(value);
					this.SendPropertyChanging();
					this._FirmCode = value;
					this.SendPropertyChanged("FirmCode");
					this.OnFirmCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmName", DbType="NVarChar(100)")]
		public string FirmName
		{
			get
			{
				return this._FirmName;
			}
			set
			{
				if ((this._FirmName != value))
				{
					this.OnFirmNameChanging(value);
					this.SendPropertyChanging();
					this._FirmName = value;
					this.SendPropertyChanged("FirmName");
					this.OnFirmNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSource", DbType="Char(1)")]
		public System.Nullable<char> DataSource
		{
			get
			{
				return this._DataSource;
			}
			set
			{
				if ((this._DataSource != value))
				{
					this.OnDataSourceChanging(value);
					this.SendPropertyChanging();
					this._DataSource = value;
					this.SendPropertyChanged("DataSource");
					this.OnDataSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSign", DbType="Int")]
		public System.Nullable<int> UserSign
		{
			get
			{
				return this._UserSign;
			}
			set
			{
				if ((this._UserSign != value))
				{
					this.OnUserSignChanging(value);
					this.SendPropertyChanging();
					this._UserSign = value;
					this.SendPropertyChanged("UserSign");
					this.OnUserSignChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
